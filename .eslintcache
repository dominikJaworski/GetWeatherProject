[{"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\index.js":"1","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\reportWebVitals.js":"2","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\App.js":"3","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\searchLocation.js":"4","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\SearchLocation.js":"5","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\BiweeklyForecast.js":"6","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\CurrentForecast.js":"7","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\HourlyForecast.js":"8","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\OtherFunctions.js":"9","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\WeatherIcon.js":"10"},{"size":474,"mtime":1608071709871,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":3138,"mtime":1627176745552,"results":"14","hashOfConfig":"12"},{"size":854,"mtime":1610592909407,"results":"15","hashOfConfig":"12"},{"size":422,"mtime":1627008601540,"results":"16","hashOfConfig":"12"},{"size":210,"mtime":1625191860270,"results":"17","hashOfConfig":"12"},{"size":3697,"mtime":1627176501461,"results":"18","hashOfConfig":"12"},{"size":800,"mtime":1626843350265,"results":"19","hashOfConfig":"12"},{"size":1534,"mtime":1627002000335,"results":"20","hashOfConfig":"12"},{"size":305,"mtime":1627005598822,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"vx4db4",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\index.js",[],["48","49"],"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\reportWebVitals.js",[],"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\App.js",["50","51"],"import React, { Component, useState } from 'react';\nimport SearchLocation from './Components/SearchLocation';\nimport HourlyForecast from './Components/HourlyForecast';\nimport CurrentForecast from './Components/CurrentForecast';\nimport BiweeklyForecast from './Components/BiweeklyForecast';\nimport 'tachyons';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      searchField: '',\n      forecastType: 0,\n      location: 'detroit'\n    }\n\n    this.onSearchFieldChange = this.onSearchFieldChange.bind(this);\n    this.onSearchFieldSubmit = this.onSearchFieldSubmit.bind(this);\n  }\n\n  //searchField will be the location being searched for weather\n  // onSearchChange = (event) => {\n  //   this.setState({ searchField: event.target.value }) //changes searchField prop of state to events arg\n  // }\n\n  onSearchFieldChange = (event) => {\n    this.setState({ searchField: event.target.value })\n  }\n\n  onSearchFieldSubmit = (event) => {\n    this.setState({ location: this.state.searchField });\n    //alert('new location will be :' + this.state.searchField);\n    event.preventDefault();\n  }\n\n  onCurrentForecastClick = () => {\n    this.setState({ forecastType: 0 })\n  }\n\n  onHourlyForecast = () => {\n    this.setState({ forecastType: 1 })\n  }\n\n  onBiweeklyForecast = () => {\n    this.setState({ forecastType: 2 })\n  }\n\n  render() {\n\n    //insert condition render here\n    const whichWeatherType = this.state.forecastType;\n    let weatherType;\n\n    switch (whichWeatherType) {\n      case 1:\n        weatherType = <HourlyForecast location={this.state.location}></HourlyForecast>\n        break;\n      case 2:\n        weatherType = <BiweeklyForecast location={this.state.location}></BiweeklyForecast>\n        break;\n      default:\n        weatherType = <CurrentForecast location={this.state.location}></CurrentForecast>\n    }\n\n    return (\n      <div className='tc'>\n        <h1 color=\"white\">Weather forecast</h1>\n        {/* <SearchLocation searchField={this.onSearchFieldChange}>\n        </SearchLocation> */}\n\n        <form className='pa2' onSubmit={this.onSearchFieldSubmit}>\n          <input\n            className='pa3 ba b--green bg-lightest-blue'\n            type='search'\n            placeholder='Search Locations'\n            onChange={this.onSearchFieldChange}\n          />\n          <input type=\"submit\" value=\"Submit\"></input>\n        </form>\n        <p>{this.state.searchField}</p>\n        <button\n          className='current-forecast-button ba tc pa2 white bg-blue hover-bg-light-blue br2 shadow-2'\n          onClick={() => this.onCurrentForecastClick(this.state.searchField)}>Current Forecast</button>\n\n        <button\n          className='current-forecast-button ba tc pa2 white bg-green hover-bg-light-green br2 shadow-2'\n          onClick={() => this.onHourlyForecast()}>Hourly Forecast</button>\n          \n        <button\n          className='current-forecast-button ba tc pa2 white bg-purple hover-bg-light-purple br2 shadow-2'\n          onClick={() => this.onBiweeklyForecast()}>Biweekly Forecast</button>\n\n        {weatherType}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\searchLocation.js",[],"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\SearchLocation.js",[],"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\BiweeklyForecast.js",[],"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\CurrentForecast.js",["52","53"],"import React, { useEffect, useState } from 'react';\r\nimport \"../CSS/CurrentForecast.css\"\r\nimport \"../Components/WeatherIcon\";\r\nimport { getCurrentDateandTime } from \"../OtherFunctions.js\";\r\nimport 'tachyons';\r\nimport WeatherIcon from '../Components/WeatherIcon';\r\n\r\nconst APIkey = '';\r\n\r\nconst CurrentForecast = (props) => {\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    let location = props.location;\r\n\r\n    useEffect(() => {\r\n        const fn = async () => {\r\n            try {\r\n                const result = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${APIkey}`);\r\n\r\n                setIsLoaded(true);\r\n                setWeatherData(await result.json());\r\n            }\r\n            catch (error) {\r\n                setIsLoaded(true);\r\n                setError(error);\r\n            }\r\n        };\r\n        fn(); //calling the function defined above\r\n    }, []\r\n    )\r\n\r\n\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else if (weatherData !== null) \r\n        if (weatherData.cod == \"404\") {\r\n            return <div>data for that location not available</div>\r\n        }\r\n        else {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <div className=\"weather-side\">\r\n                    <div className=\"weather-gradient\">\r\n\r\n                    </div>\r\n                    <div className=\"date-container\">\r\n                        {getCurrentDateandTime()}\r\n                    </div>\r\n                    <div className=\"weather-container\">\r\n\r\n                        <WeatherIcon description={weatherData.weather[0].description}></WeatherIcon>\r\n                        <h1 className=\"weather-temp\">{weatherData.main.temp}</h1>\r\n                        <h3 className=\"weather-desc\">{weatherData.weather[0].description} </h3>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"info-side\">\r\n                    <div className=\"today-info-container\">\r\n                        <div className=\"today-info\">\r\n                            <div className=\"humidity\">\r\n                                <span className=\"title\">HUMIDITY</span>\r\n                                <span className=\"value\">{weatherData.main.humidity}</span>\r\n                            </div>\r\n                            <div className=\"humidity\">\r\n                                <span className=\"title\">FEELS LIKE</span>\r\n                                <span className=\"value\">{weatherData.main.feels_like}</span>\r\n                            </div>\r\n                            <div className=\"wind\">\r\n                                <span className=\"title\">WINDSPEED</span>\r\n                                <span className=\"value\">{weatherData.wind.speed}</span>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return <div> not found!</div>\r\n    }\r\n\r\n}\r\n\r\n/*\r\n{weatherData !== null ? (\r\n                    <li key={weatherData.sys.id}>\r\n                        {weatherData.name}<br></br>\r\n                        {weatherData.weather[0].description}<br></br>\r\n                        {weatherData.main.temp}<br></br>\r\n                        {weatherData.main.humidity}<br></br>\r\n                    </li>\r\n                ) : (\r\n                    <></>\r\n                )}\r\n*/\r\n\r\nexport default CurrentForecast;","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\HourlyForecast.js",["54","55"],"import React from 'react';\r\nimport 'tachyons';\r\n\r\nconst APIkey = '';\r\n//think about translating city location to lat and lon for hourly and biweekly\r\n\r\nconst HourlyForecast = (props) => {\r\n    let location = props.location;\r\n\r\n    // const fn = async () => {\r\n    //         try {\r\n    //             const result = await fetch(`pro.openweathermap.org/data/2.5/forecast/hourly?q=${location}&appid=${APIkey}`);\r\n\r\n    //             setIsLoaded(true);\r\n    //             setWeatherData(await result.json());\r\n    //         }\r\n    //         catch (error) {\r\n    //             setIsLoaded(true);\r\n    //             setError(error);\r\n    //         }\r\n    //     };\r\n    // fn();\r\n\r\n    return(\r\n        <div>hourly</div>\r\n    )\r\n\r\n}\r\n\r\nexport default HourlyForecast;","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\OtherFunctions.js",[],"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\WeatherIcon.js",["56"],"import React from 'react';\r\nimport \"../CSS/CurrentForecast.css\";\r\nimport 'tachyons';\r\n\r\nconst WeatherIcon = (props) => {\r\n    let description = props.description;\r\n\r\n    return (\r\n        <img src={require(\"../Icons/sunny.png\")} alt=\"\" width=\"56\" height=\"56\"></img>\r\n    )\r\n}\r\n\r\nexport default WeatherIcon",["57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":1,"column":28,"nodeType":"65","messageId":"66","endLine":1,"endColumn":36},{"ruleId":"63","severity":1,"message":"67","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":22},{"ruleId":"68","severity":1,"message":"69","line":30,"column":8,"nodeType":"70","endLine":30,"endColumn":10,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":40,"column":29,"nodeType":"74","messageId":"75","endLine":40,"endColumn":31},{"ruleId":"63","severity":1,"message":"76","line":4,"column":7,"nodeType":"65","messageId":"66","endLine":4,"endColumn":13},{"ruleId":"63","severity":1,"message":"77","line":8,"column":9,"nodeType":"65","messageId":"66","endLine":8,"endColumn":17},{"ruleId":"63","severity":1,"message":"78","line":6,"column":9,"nodeType":"65","messageId":"66","endLine":6,"endColumn":20},{"ruleId":"59","replacedBy":"79"},{"ruleId":"61","replacedBy":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'SearchLocation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location'. Either include it or remove the dependency array.","ArrayExpression",["83"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'APIkey' is assigned a value but never used.","'location' is assigned a value but never used.","'description' is assigned a value but never used.",["81"],["82"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [location]",{"range":"86","text":"87"},[1063,1065],"[location]"]