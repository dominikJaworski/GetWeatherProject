[{"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\index.js":"1","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\reportWebVitals.js":"2","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\App.js":"3","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\BiweeklyForecast.js":"4","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\CurrentForecast.js":"5","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\HourlyForecast.js":"6","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\OtherFunctions.js":"7","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\WeatherIcon.js":"8","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\WeatherHour.js":"9"},{"size":474,"mtime":1608071709871,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":4001,"mtime":1629596001140,"results":"13","hashOfConfig":"11"},{"size":3103,"mtime":1629590535378,"results":"14","hashOfConfig":"11"},{"size":3590,"mtime":1628391831454,"results":"15","hashOfConfig":"11"},{"size":2165,"mtime":1629590671162,"results":"16","hashOfConfig":"11"},{"size":1377,"mtime":1628388407269,"results":"17","hashOfConfig":"11"},{"size":305,"mtime":1627005598822,"results":"18","hashOfConfig":"11"},{"size":1655,"mtime":1629594241743,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"vx4db4",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\index.js",[],["41","42"],"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\reportWebVitals.js",[],"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\App.js",["43","44","45"],"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\BiweeklyForecast.js",["46","47"],"import React, { useEffect, useState } from 'react';\r\nimport { getCurrentDateandTime } from \"../OtherFunctions.js\";\r\nimport 'tachyons';\r\nimport WeatherIcon from '../Components/WeatherIcon';\r\n\r\nconst APIkey = '23628a9de895c8a73840ced8190e3c96';\r\n//const result = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${location}&units=metric&appid=${APIkey}`)\r\n\r\nconst CurrentForecast = (props) => {\r\n    const [weatherData, setWeatherData] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    let locationLat = props.latitude;\r\n    let locationLong = props.longitude;\r\n\r\n    useEffect(() => {\r\n        const fn = async () => {\r\n            try {\r\n                const result = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${locationLat}&lon=${locationLong}&exclude=current,hourly,minutely,alerts&units=metric&appid=${APIkey}`);\r\n                \r\n                setWeatherData(await result.json());\r\n                setIsLoaded(true);\r\n            }\r\n            catch (error) {\r\n                setIsLoaded(true);\r\n                setError(error);\r\n            }\r\n        };\r\n        fn(); //calling the function defined above\r\n    }, [locationLat, locationLong]\r\n    )\r\n\r\n    console.log(\"Latitude = \", locationLat, \", Longitude = \", locationLong, \", APIkey = \", APIkey);\r\n\r\n    if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else if (weatherData !== null) \r\n        if (weatherData.cod === \"404\") {\r\n            return <div>data for that location not available</div>\r\n        }\r\n        else {\r\n        return (\r\n            <div>daily forecast</div>\r\n        );\r\n    }\r\n    else {\r\n        return <div> not found!</div>\r\n    }\r\n\r\n}\r\n\r\n/*\r\n<div className=\"container\">\r\n                /* <WeatherHour hour={weatherData.daily[0]}></WeatherHour>\r\n                <WeatherHour hour={weatherData.daily[1]}></WeatherHour>\r\n                <WeatherHour hour={weatherData.daily[2]}></WeatherHour>\r\n                <WeatherHour hour={weatherData.daily[3]}></WeatherHour>\r\n                <WeatherHour hour={weatherData.daily[4]}></WeatherHour>\r\n                <WeatherHour hour={weatherData.daily[5]}></WeatherHour>\r\n                <WeatherHour hour={weatherData.daily[6]}></WeatherHour>\r\n                <WeatherHour hour={weatherData.daily[7]}></WeatherHour>\r\n                <WeatherHour hour={weatherData.daily[8]}></WeatherHour>\r\n                <WeatherHour hour={weatherData.daily[9]}></WeatherHour>\r\n                <WeatherHour hour={weatherData.daily[10]}></WeatherHour>\r\n                <WeatherHour hour={weatherData.daily[11]}></WeatherHour>\r\n                <WeatherHour hour={weatherData.daily[12]}></WeatherHour>\r\n                <WeatherHour hour={weatherData.daily[13]}></WeatherHour>\r\n                <WeatherHour hour={weatherData.daily[14]}></WeatherHour>\r\n                <WeatherHour hour={weatherData.daily[15]}></WeatherHour>\r\n                </div>\r\n*/\r\n\r\nexport default CurrentForecast;","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\CurrentForecast.js",[],"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\HourlyForecast.js",["48","49"],"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\OtherFunctions.js",[],"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\WeatherIcon.js",["50"],"import React from 'react';\r\nimport \"../CSS/CurrentForecast.css\";\r\nimport 'tachyons';\r\n\r\nconst WeatherIcon = (props) => {\r\n    let description = props.description;\r\n\r\n    return (\r\n        <img src={require(\"../Icons/sunny.png\")} alt=\"\" width=\"56\" height=\"56\"></img>\r\n    )\r\n}\r\n\r\nexport default WeatherIcon","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\WeatherHour.js",["51","52","53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":26},{"ruleId":"59","severity":1,"message":"63","line":17,"column":10,"nodeType":"61","messageId":"62","endLine":17,"endColumn":15},{"ruleId":"64","severity":1,"message":"65","line":39,"column":6,"nodeType":"66","endLine":39,"endColumn":16,"suggestions":"67"},{"ruleId":"59","severity":1,"message":"68","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":31},{"ruleId":"59","severity":1,"message":"69","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":19},{"ruleId":"59","severity":1,"message":"68","line":4,"column":10,"nodeType":"61","messageId":"62","endLine":4,"endColumn":31},{"ruleId":"59","severity":1,"message":"69","line":5,"column":8,"nodeType":"61","messageId":"62","endLine":5,"endColumn":19},{"ruleId":"59","severity":1,"message":"70","line":6,"column":9,"nodeType":"61","messageId":"62","endLine":6,"endColumn":20},{"ruleId":"59","severity":1,"message":"71","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":26},{"ruleId":"59","severity":1,"message":"72","line":1,"column":28,"nodeType":"61","messageId":"62","endLine":1,"endColumn":36},{"ruleId":"59","severity":1,"message":"69","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":19},{"ruleId":"59","severity":1,"message":"73","line":7,"column":9,"nodeType":"61","messageId":"62","endLine":7,"endColumn":13},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'locationLat' and 'locationLong'. Either include them or remove the dependency array.","ArrayExpression",["76"],"'getCurrentDateandTime' is defined but never used.","'WeatherIcon' is defined but never used.","'description' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'time' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [location, locationLat, locationLong]",{"range":"79","text":"80"},[1413,1423],"[location, locationLat, locationLong]"]