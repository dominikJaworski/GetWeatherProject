[{"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\index.js":"1","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\reportWebVitals.js":"2","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\App.js":"3","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\OtherFunctions.js":"4","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\CurrentForecast.jsx":"5","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\HourlyForecast.jsx":"6","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\BiweeklyForecast.jsx":"7","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\WeatherIcon.jsx":"8","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\WeatherHourly.jsx":"9"},{"size":474,"mtime":1608071709871,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":4001,"mtime":1629596001140,"results":"13","hashOfConfig":"11"},{"size":1377,"mtime":1628388407269,"results":"14","hashOfConfig":"11"},{"size":3567,"mtime":1629599528258,"results":"15","hashOfConfig":"11"},{"size":2161,"mtime":1629599163232,"results":"16","hashOfConfig":"11"},{"size":3091,"mtime":1629599466397,"results":"17","hashOfConfig":"11"},{"size":305,"mtime":1629599399485,"results":"18","hashOfConfig":"11"},{"size":2148,"mtime":1629599163235,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"vx4db4",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\index.js",[],["40","41"],"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\reportWebVitals.js",[],"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\App.js",["42","43","44"],"import React, { Component, useState, useEffect } from 'react';\n//import SearchLocation from './Components/SearchLocation';\nimport HourlyForecast from './Components/HourlyForecast';\nimport CurrentForecast from './Components/CurrentForecast';\nimport BiweeklyForecast from './Components/BiweeklyForecast';\nimport 'tachyons';\nimport './App.css';\n\nconst APIkey = '62bb4e9ufjTQ8FAHXTOATywrD0m0fCgY';\n\nconst App = (props) => {\n  const [searchField, setSearchField] = useState(\"Detroit\");\n  const [location, setLocation] = useState(\"Detroit\");\n  const [locationLat, setLat] = useState(\"\");\n  const [locationLong, setLong] = useState(\"\");\n  const [forecastType, setForecastType] = useState(0);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  //set state\n  useEffect(() => {\n    const fetchGeocode = async () => {\n      try {\n        const result = await fetch(`http://www.mapquestapi.com/geocoding/v1/address?key=${APIkey}&location=${location}`);\n\n        const JSONresult = await result.json()\n        setLat(JSONresult.results[0].locations[0].latLng.lat);\n        setLong(JSONresult.results[0].locations[0].latLng.lng);\n        console.log(\"At mount: Latitude = \", locationLat, \", Longitude = \", locationLong);\n        setIsLoaded(true);\n        //\n      }\n      catch (error) {\n        setIsLoaded(true);\n        setError(error);\n      }\n    }\n    fetchGeocode();\n  }, [location]);\n\n  /////////////////setting events listeners\n  const onSearchFieldChange = (event) => {\n    setSearchField(event.target.value);\n  }\n\n  const onSearchFieldSubmit = (event) => {\n    setLocation(searchField);\n    //alert('new location will be :' + this.state.searchField);\n    event.preventDefault();\n  }\n\n  const onCurrentForecastClick = () => {\n    setForecastType(0);\n  }\n\n  const onHourlyForecast = () => {\n    setForecastType(1);\n  }\n\n  const onBiweeklyForecast = () => {\n    setForecastType(2);\n  }\n\n  /////////////////\n\n  //insert condition render here\n  const whichWeatherType = forecastType;\n  let weatherType;\n  // set type of weather forecast\n  switch (whichWeatherType) {\n    case 1:\n      weatherType = <HourlyForecast latitude={locationLat} longitude={locationLong}></HourlyForecast>\n      break;\n    case 2:\n      weatherType = <BiweeklyForecast latitude={locationLat} longitude={locationLong}></BiweeklyForecast>\n      break;\n    default:\n      console.log(\"Before the current: Latitude = \", locationLat, \", Longitude = \", locationLong);\n      weatherType = <CurrentForecast latitude={locationLat} longitude={locationLong}></CurrentForecast>\n  }\n\n  if (!isLoaded) {\n    return (<div>Loading...</div>)\n  } else {\n    return (\n      <div className='tc'>\n        <h1 style={{ color: 'white' }}>Weather forecast</h1>\n        {/* <SearchLocation searchField={this.onSearchFieldChange}>\n      </SearchLocation> */}\n\n        <form className='pa2' onSubmit={onSearchFieldSubmit}>\n          <input\n            className='pa3 ba b--green bg-lightest-blue'\n            type='search'\n            placeholder='Search Locations'\n            onChange={onSearchFieldChange}\n          />\n          <input type=\"submit\" value=\"Submit\" className='ba tc pa2 white bg-blue hover-bg-light-blue br2 shadow-2'></input>\n        </form>\n        {/* <p>{searchField}</p>\n        <p>{locationLat}, {locationLong}</p> */}\n        <button\n          className='current-forecast-button ba tc pa2 white bg-blue hover-bg-light-blue br2 shadow-2'\n          onClick={() => onCurrentForecastClick(searchField)}>Current Forecast</button>\n\n        <button\n          className='current-forecast-button ba tc pa2 white bg-green hover-bg-light-green br2 shadow-2'\n          onClick={() => onHourlyForecast()}>Hourly Forecast</button>\n\n        <button\n          className='current-forecast-button ba tc pa2 white bg-purple hover-bg-light-purple br2 shadow-2'\n          onClick={() => onBiweeklyForecast()}>Biweekly Forecast</button>\n\n        {weatherType}\n\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\OtherFunctions.js",[],"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\CurrentForecast.jsx",[],"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\HourlyForecast.jsx",["45","46"],"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\BiweeklyForecast.jsx",["47","48"],"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\WeatherIcon.jsx",["49"],"C:\\Projects\\Developer Course\\WeatherProject\\getweather\\src\\Components\\WeatherHourly.jsx",["50","51","52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"61","line":17,"column":10,"nodeType":"59","messageId":"60","endLine":17,"endColumn":15},{"ruleId":"62","severity":1,"message":"63","line":39,"column":6,"nodeType":"64","endLine":39,"endColumn":16,"suggestions":"65"},{"ruleId":"57","severity":1,"message":"66","line":4,"column":10,"nodeType":"59","messageId":"60","endLine":4,"endColumn":31},{"ruleId":"57","severity":1,"message":"67","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":19},{"ruleId":"57","severity":1,"message":"66","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":31},{"ruleId":"57","severity":1,"message":"67","line":4,"column":8,"nodeType":"59","messageId":"60","endLine":4,"endColumn":19},{"ruleId":"57","severity":1,"message":"68","line":6,"column":9,"nodeType":"59","messageId":"60","endLine":6,"endColumn":20},{"ruleId":"57","severity":1,"message":"69","line":1,"column":17,"nodeType":"59","messageId":"60","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"70","line":1,"column":28,"nodeType":"59","messageId":"60","endLine":1,"endColumn":36},{"ruleId":"57","severity":1,"message":"67","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":19},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'locationLat' and 'locationLong'. Either include them or remove the dependency array.","ArrayExpression",["73"],"'getCurrentDateandTime' is defined but never used.","'WeatherIcon' is defined but never used.","'description' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [location, locationLat, locationLong]",{"range":"76","text":"77"},[1413,1423],"[location, locationLat, locationLong]"]